
services:
  # MQTT Broker
  mqtt:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    command: mosquitto -c /mosquitto/config/mosquitto.conf
    restart: unless-stopped

  # InfluxDB for time-series data storage 
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_INIT_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_INIT_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_INIT_ADMIN_TOKEN}
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    restart: unless-stopped

  # Telegraf for data collection from MQTT
  telegraf:
    image: telegraf:1.28
    container_name: telegraf
    hostname: telegraf-collector
    depends_on:
      - mqtt
      - influxdb
    environment:
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=${INFLUXDB_INIT_ADMIN_TOKEN}
      - INFLUX_ORG=${INFLUXDB_INIT_ORG}
      - INFLUX_BUCKET=${INFLUXDB_INIT_BUCKET}
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - influxdb
    restart: unless-stopped



  # Xcel Itron2MQTT Application (for when you have real meter access)
  xcel_itron2mqtt:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: xcel_itron2mqtt
    depends_on:
      - mqtt
    volumes:
      - ./certs:/opt/xcel_itron2mqtt/certs
    environment:
      - MQTT_SERVER=${MQTT_SERVER}
      - MQTT_PORT=${MQTT_PORT}
      - MQTT_USER=${MQTT_USER}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - METER_IP=${METER_IP}
      - METER_PORT=${METER_PORT}
      - CERT_PATH=${CERT_PATH}
      - KEY_PATH=${KEY_PATH}
      - LOGLEVEL=${LOGLEVEL}
    env_file:
      - .env
    restart: unless-stopped
    profiles:
      - real_meter  # Only start when you have real meter access

volumes:
  influxdb_data:
  influxdb_config:
  grafana_data:
  certs: 
